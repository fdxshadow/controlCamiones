version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:12.15.0-browsers
    working_directory: ~/controlCamiones
    steps:
    #comando de circleci para pararse en la rama correspondiente
      - checkout
      - run: npm install
      #guardado de depndencias instaladas en este paso
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
  test:
    docker:
      - image: circleci/node:12.15.0-browsers
    working_directory: ~/controlCamiones
    steps:
      - checkout
      #se recupera dependencias cacheadas o guardadas en el paso anterior
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
            - v1-dependencies-
            #se ejecuta comando de test
      - run: npm test --no-watch
  deployment_test:
    docker:
      - image: circleci/android:api-28-node
    working_directory: ~/controlCamiones
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package-lock.json" }}
            - v1-dependencies-

        #install gradle
      - run: 
            name: "Install gradle"
            command: |
              wget https://services.gradle.org/distributions/gradle-6.1.1-bin.zip -P /tmp
              sudo unzip -d /opt/gradle /tmp/gradle-*.zip
              echo 'export GRADLE_HOME=/opt/gradle/gradle-4.0.2' >> $BASH_ENV
              echo 'export PATH=$PATH:/opt/gradle/gradle-4.0.2/bin' >> $BASH_ENV
              source $BASH_ENV
      - run: node --version      
        #se ejecuta instalacion de ionic      
      - run: sudo npm install -g @ionic/cli
        #se compila ionic 
      - run: ionic build
        #se pasa a codigo nativo android
      - run: ionic capacitor add android
        #se genera apk
      run:
          name: Initial build
          command: gradlew clean assembleRelease --no-daemon --stacktrace
      - store_artifacts:
          path: app/build/outputs/apk/
          destination: apks/

        #se construye apk
        #subirlo a algun servidor en especial
        #generar un email con apk o un repositorio de versiones que diga rama, apk


workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - deployment_test:
          requires:
            - build
          #filters:
           # branches:
            #  only: master  

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

   
